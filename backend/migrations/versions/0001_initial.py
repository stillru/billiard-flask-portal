"""Initial

Revision ID: 0001
Revises: 
Create Date: 2024-08-25 10:58:28.228889

"""
from alembic import op
import sqlalchemy as sa
from backend.migrations.versions import log

# revision identifiers, used by Alembic.
revision = '0001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    log.info(f"{revision} - Creating table 'clubs'...")
    try:
        log.info(f"{revision} - Creating table 'clubs'...")
        op.create_table('clubs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('table_count', sa.Integer(), nullable=False),
    sa.Column('games_played', sa.Integer(), nullable=False),
    sa.Column('price_per_hour', sa.Float(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('top_players', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'news'...")
        op.create_table('news',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('body', sa.Text(), nullable=False),
    sa.Column('source_type', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'season'...")
        op.create_table('season',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'tags'...")
        op.create_table('tags',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'users'...")
        op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'win_reason'...")
        op.create_table('win_reason',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'news_tags'...")
        op.create_table('news_tags',
    sa.Column('news_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['news.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tags.id'], )
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'photos'...")
        op.create_table('photos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'players'...")
        op.create_table('players',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=True),
    sa.Column('played_games', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'tournaments'...")
        op.create_table('tournaments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('tournament_type', sa.Enum('ELIMINATION', 'ROUND_ROBIN', 'SWISS', name='tournamenttype'), nullable=False),
    sa.Column('prize_pool', sa.Float(), nullable=True),
    sa.Column('organizer', sa.String(), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('player_count', sa.Integer(), nullable=False),
    sa.Column('phase', sa.Enum('REGISTRATION', 'GROUP_STAGE', 'KNOCKOUT', 'FINAL', 'COMPLETED', name='tournamentphase'), nullable=False),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'matches'...")
        op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('round_number', sa.Integer(), nullable=True),
    sa.Column('player1_id', sa.Integer(), nullable=True),
    sa.Column('player2_id', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('match_date', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['player1_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['player2_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'tournament_participants'...")
        op.create_table('tournament_participants',
    sa.Column('tournament_id', sa.Integer(), nullable=False),
    sa.Column('player_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.PrimaryKeyConstraint('tournament_id', 'player_id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'games'...")
        op.create_table('games',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('match_id', sa.Integer(), nullable=True),
    sa.Column('club_id', sa.Integer(), nullable=True),
    sa.Column('season_id', sa.Integer(), nullable=True),
    sa.Column('tournament_id', sa.Integer(), nullable=True),
    sa.Column('player1_score', sa.Integer(), nullable=True),
    sa.Column('player2_score', sa.Integer(), nullable=True),
    sa.Column('winner_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('IN_PROGRESS', 'COMPLETED', name='gamestatus'), nullable=True),
    sa.ForeignKeyConstraint(['club_id'], ['clubs.id'], ),
    sa.ForeignKeyConstraint(['match_id'], ['matches.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['season.id'], ),
    sa.ForeignKeyConstraint(['tournament_id'], ['tournaments.id'], ),
    sa.ForeignKeyConstraint(['winner_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    try:
        log.info(f"{revision} - Creating table 'events'...")
        op.create_table('events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('game_id', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Integer(), nullable=True),
    sa.Column('event_type', sa.Enum('BALL_POTTED', 'FOUL', 'TURN_END', 'GAME_WIN', name='eventtype'), nullable=True),
    sa.Column('ball_number', sa.Integer(), nullable=True),
    sa.Column('is_foul', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['game_id'], ['games.id'], ),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('events')
    op.drop_table('games')
    op.drop_table('tournament_participants')
    op.drop_table('matches')
    op.drop_table('tournaments')
    op.drop_table('players')
    op.drop_table('photos')
    op.drop_table('news_tags')
    op.drop_table('win_reason')
    op.drop_table('users')
    op.drop_table('tags')
    op.drop_table('season')
    op.drop_table('news')
    op.drop_table('clubs')
    # ### end Alembic commands ###

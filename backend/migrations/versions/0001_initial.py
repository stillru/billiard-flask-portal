"""Initial

Revision ID: 0001
Revises: 
Create Date: 2024-08-25 10:58:28.228889

"""

from alembic import op
import sqlalchemy as sa
from backend.migrations.versions import log

# revision identifiers, used by Alembic.
revision = "0001"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    log.info(f"{revision} - Creating table 'clubs'...")
    try:
        op.create_table(
            "clubs",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.Column("description", sa.Text(), nullable=True),
            sa.Column("address", sa.String(), nullable=False),
            sa.Column("latitude", sa.Float(), nullable=True),
            sa.Column("longitude", sa.Float(), nullable=True),
            sa.Column("table_count", sa.Integer(), nullable=False),
            sa.Column("games_played", sa.Integer(), nullable=False),
            sa.Column("price_per_hour", sa.Float(), nullable=True),
            sa.Column("rating", sa.Float(), nullable=True),
            sa.Column("top_players", sa.String(), nullable=True),
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=True,
            ),
            sa.Column(
                "updated_at",
                sa.DateTime(),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=True,
            ),
            sa.PrimaryKeyConstraint("id", name="pk_clubs"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'news'...")
        op.create_table(
            "news",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("title", sa.String(length=255), nullable=False),
            sa.Column("body", sa.Text(), nullable=False),
            sa.Column("source_type", sa.String(length=50), nullable=False),
            sa.Column("created_at", sa.DateTime(), nullable=True),
            sa.PrimaryKeyConstraint("id", name="pk_news"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'season'...")
        op.create_table(
            "season",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(length=64), nullable=False),
            sa.Column("start_date", sa.Date(), nullable=False),
            sa.Column("end_date", sa.Date(), nullable=False),
            sa.Column("is_active", sa.Boolean(), nullable=True),
            sa.PrimaryKeyConstraint("id", name="pk_season"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'tags'...")
        op.create_table(
            "tags",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id", name="pk_tags"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'users'...")
        op.create_table(
            "users",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.Column("email", sa.String(), nullable=False),
            sa.Column("password", sa.String(), nullable=False),
            sa.PrimaryKeyConstraint("id", name="pk_users"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'win_reason'...")
        op.create_table(
            "win_reason",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("description", sa.String(length=255), nullable=False),
            sa.PrimaryKeyConstraint("id", name="pk_win_reason"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'news_tags'...")
        op.create_table(
            "news_tags",
            sa.Column("news_id", sa.Integer(), nullable=True),
            sa.Column("tag_id", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(
                ["news_id"], ["news.id"], name="fk_news_tags_news_id"
            ),
            sa.ForeignKeyConstraint(
                ["tag_id"], ["tags.id"], name="fk_news_tags_tag_id"
            ),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'photos'...")
        op.create_table(
            "photos",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("url", sa.String(), nullable=False),
            sa.Column("description", sa.String(), nullable=True),
            sa.Column("club_id", sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(
                ["club_id"], ["clubs.id"], name="fk_photos_club_id"
            ),
            sa.PrimaryKeyConstraint("id", name="pk_photos"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'players'...")
        op.create_table(
            "players",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.Column("score", sa.Integer(), nullable=True),
            sa.Column("played_games", sa.Integer(), nullable=True),
            sa.Column("user_id", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(
                ["user_id"], ["users.id"], name="fk_players_user_id"
            ),
            sa.PrimaryKeyConstraint("id", name="pk_players"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'tournaments'...")
        op.create_table(
            "tournaments",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("name", sa.String(), nullable=False),
            sa.Column("description", sa.Text(), nullable=True),
            sa.Column(
                "tournament_type",
                sa.Enum("ELIMINATION", "ROUND_ROBIN", "SWISS", name="tournamenttype"),
                nullable=False,
            ),
            sa.Column("prize_pool", sa.Float(), nullable=True),
            sa.Column("organizer", sa.String(), nullable=False),
            sa.Column("start_date", sa.DateTime(timezone=True), nullable=False),
            sa.Column("end_date", sa.DateTime(timezone=True), nullable=False),
            sa.Column("player_count", sa.Integer(), nullable=False),
            sa.Column(
                "phase",
                sa.Enum(
                    "REGISTRATION",
                    "GROUP_STAGE",
                    "KNOCKOUT",
                    "FINAL",
                    "COMPLETED",
                    name="tournamentphase",
                ),
                nullable=False,
            ),
            sa.Column("season_id", sa.Integer(), nullable=True),
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=True,
            ),
            sa.Column(
                "updated_at",
                sa.DateTime(),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=True,
            ),
            sa.ForeignKeyConstraint(
                ["season_id"], ["season.id"], name="fk_tournaments_season_id"
            ),
            sa.PrimaryKeyConstraint("id", name="pk_tournaments"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'matches'...")
        op.create_table(
            "matches",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("round_number", sa.Integer(), nullable=True),
            sa.Column("player1_id", sa.Integer(), nullable=True),
            sa.Column("player2_id", sa.Integer(), nullable=True),
            sa.Column("winner_id", sa.Integer(), nullable=True),
            sa.Column("tournament_id", sa.Integer(), nullable=True),
            sa.Column("match_date", sa.DateTime(timezone=True), nullable=True),
            sa.ForeignKeyConstraint(
                ["player1_id"], ["players.id"], name="fk_matches_player1_id"
            ),
            sa.ForeignKeyConstraint(
                ["player2_id"], ["players.id"], name="fk_matches_player2_id"
            ),
            sa.ForeignKeyConstraint(
                ["tournament_id"], ["tournaments.id"], name="fk_matches_tournament_id"
            ),
            sa.ForeignKeyConstraint(
                ["winner_id"], ["players.id"], name="fk_matches_winner_id"
            ),
            sa.PrimaryKeyConstraint("id", name="pk_matches"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'tournament_participants'...")
        op.create_table(
            "tournament_participants",
            sa.Column("tournament_id", sa.Integer(), nullable=False),
            sa.Column("player_id", sa.Integer(), nullable=False),
            sa.ForeignKeyConstraint(
                ["player_id"],
                ["players.id"],
                name="fk_tournament_participants_player_id",
            ),
            sa.ForeignKeyConstraint(
                ["tournament_id"],
                ["tournaments.id"],
                name="fk_tournament_participants_tournament_id",
            ),
            sa.PrimaryKeyConstraint(
                "tournament_id", "player_id", name="pk_tournament_participants"
            ),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'games'...")
        op.create_table(
            "games",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("match_id", sa.Integer(), nullable=False),
            sa.Column("winner_id", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(
                ["match_id"], ["matches.id"], name="fk_games_match_id"
            ),
            sa.ForeignKeyConstraint(
                ["winner_id"], ["players.id"], name="fk_games_winner_id"
            ),
            sa.PrimaryKeyConstraint("id", name="pk_games"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    try:
        log.info(f"{revision} - Creating table 'match_actions'...")
        op.create_table(
            "match_actions",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("game_id", sa.Integer(), nullable=False),
            sa.Column("action_number", sa.Integer(), nullable=False),
            sa.Column("player_id", sa.Integer(), nullable=True),
            sa.Column(
                "ball_color",
                sa.Enum(
                    "RED",
                    "YELLOW",
                    "GREEN",
                    "BROWN",
                    "BLUE",
                    "PINK",
                    "BLACK",
                    "WHITE",
                    name="ballcolor",
                ),
                nullable=True,
            ),
            sa.Column("target_pocket", sa.String(), nullable=True),
            sa.ForeignKeyConstraint(
                ["game_id"], ["games.id"], name="fk_match_actions_game_id"
            ),
            sa.ForeignKeyConstraint(
                ["player_id"], ["players.id"], name="fk_match_actions_player_id"
            ),
            sa.PrimaryKeyConstraint("id", name="pk_match_actions"),
        )
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    log.info(f"{revision} - Dropping table 'match_actions'...")
    try:
        op.drop_table("match_actions")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'games'...")
    try:
        op.drop_table("games")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'tournament_participants'...")
    try:
        op.drop_table("tournament_participants")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'matches'...")
    try:
        op.drop_table("matches")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'tournaments'...")
    try:
        op.drop_table("tournaments")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'players'...")
    try:
        op.drop_table("players")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'photos'...")
    try:
        op.drop_table("photos")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'news_tags'...")
    try:
        op.drop_table("news_tags")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'win_reason'...")
    try:
        op.drop_table("win_reason")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'users'...")
    try:
        op.drop_table("users")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'tags'...")
    try:
        op.drop_table("tags")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'season'...")
    try:
        op.drop_table("season")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'news'...")
    try:
        op.drop_table("news")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    log.info(f"{revision} - Dropping table 'clubs'...")
    try:
        op.drop_table("clubs")
    except Exception as e:
        log.error(f"{revision} - Error: {e}")

    # ### end Alembic commands ###
